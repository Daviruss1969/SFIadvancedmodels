//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-35059454
// Cuda compilation tools, release 12.6, V12.6.85
// Based on NVVM 7.0.1
//

.version 8.5
.target sm_52
.address_size 64

	// .globl	variance
// _ZZ8varianceE10sharedData has been demoted

.visible .entry variance(
	.param .u64 variance_param_0,
	.param .u64 variance_param_1,
	.param .u64 variance_param_2,
	.param .u32 variance_param_3
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<13>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<13>;
	// demoted variable
	.shared .align 4 .b8 _ZZ8varianceE10sharedData[4096];

	ld.param.u64 	%rd1, [variance_param_0];
	ld.param.u64 	%rd2, [variance_param_1];
	ld.param.u64 	%rd3, [variance_param_2];
	ld.param.u32 	%r9, [variance_param_3];
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %tid.x;
	mad.lo.s32 	%r3, %r1, %r10, %r2;
	mov.u32 	%r4, %ctaid.y;
	setp.ge.s32 	%p1, %r3, %r9;
	mov.f32 	%f12, 0f00000000;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mad.lo.s32 	%r11, %r4, %r9, %r3;
	mul.wide.s32 	%rd5, %r11, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r4, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f4, [%rd9];
	ld.global.f32 	%f5, [%rd6];
	sub.f32 	%f6, %f5, %f4;
	mul.f32 	%f12, %f6, %f6;

$L__BB0_2:
	shl.b32 	%r12, %r2, 2;
	mov.u32 	%r13, _ZZ8varianceE10sharedData;
	add.s32 	%r5, %r13, %r12;
	st.shared.f32 	[%r5], %f12;
	bar.sync 	0;
	shr.u32 	%r16, %r1, 1;
	setp.eq.s32 	%p2, %r16, 0;
	@%p2 bra 	$L__BB0_6;

$L__BB0_3:
	setp.ge.s32 	%p3, %r2, %r16;
	@%p3 bra 	$L__BB0_5;

	shl.b32 	%r14, %r16, 2;
	add.s32 	%r15, %r5, %r14;
	ld.shared.f32 	%f7, [%r5];
	ld.shared.f32 	%f8, [%r15];
	add.f32 	%f9, %f8, %f7;
	st.shared.f32 	[%r5], %f9;

$L__BB0_5:
	bar.sync 	0;
	shr.u32 	%r16, %r16, 1;
	setp.ne.s32 	%p4, %r16, 0;
	@%p4 bra 	$L__BB0_3;

$L__BB0_6:
	setp.ne.s32 	%p5, %r2, 0;
	@%p5 bra 	$L__BB0_8;

	cvta.to.global.u64 	%rd10, %rd3;
	mul.wide.s32 	%rd11, %r4, 4;
	add.s64 	%rd12, %rd10, %rd11;
	ld.shared.f32 	%f10, [_ZZ8varianceE10sharedData];
	atom.global.add.f32 	%f11, [%rd12], %f10;

$L__BB0_8:
	ret;

}

